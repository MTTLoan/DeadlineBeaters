/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.util.ArrayList;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.TaiKhoan;
import controller.TaiKhoancontroller;
import dao.TaiKhoanDAO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ASUS
 */

public final class TaiKhoanForm extends javax.swing.JPanel {

    /**
     * Creates new form TaiKhoanForm
     */
    private DefaultTableModel tblModel;
    private final ArrayList<TaiKhoan> taikhoans = TaiKhoanDAO.getInstance().selectAll();
    
    public TaiKhoanForm() {
        initComponents();
        //khởi tạo bảng
        tblAccount.setDefaultEditor(Object.class, null);
        tblAccount.getTableHeader().setFont(tblAccount.getFont().deriveFont(16));
        initTable();
        loadDataToTable(taikhoans);
    }
    
    // Phương thức khởi tạo bảng
    public final void initTable() {
        tblModel = new DefaultTableModel();
        String[] headerTbl = new String[]{"Họ và tên", "Tên tài khoản", "Mã số nhân viên", "Chức vụ", "Giới tính", "Ngày sinh"};
        tblModel.setColumnIdentifiers(headerTbl);
        tblAccount.setModel(tblModel);
    }
    
    // Phương thức tải dữ liệu vào bảng
    public void loadDataToTable(ArrayList<TaiKhoan> tk){
        try{
            tblModel.setRowCount(0);
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            for( TaiKhoan i: tk){
                tblModel.addRow(new Object[]{
                    i.getHoTen(),i.getTenTK(),i.getMaNV(),i.getChucVu(),i.getGioiTinh(),i.getNgaySinh().format(dtf)
                });
            }
        }
        catch(Exception e ){}
    }
    
    // Phương thức lấy phần tử đã chọn từ bảng
    public TaiKhoan getTaiKhoanSelect(){
        int i_row = tblAccount.getSelectedRow();
        TaiKhoan tk = TaiKhoanDAO.getInstance().selectAll().get(i_row);
        return tk;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        cbxLuachon = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        exportExcel = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1100, 820));
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 820));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAccount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Họ và tên", "Tên tài khoản", "Chức vụ", "Mã số nhân viên", "Giới tính", "Ngày sinh"
            }
        ));
        jScrollPane1.setViewportView(tblAccount);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 990, 520));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 32)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(152, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TÀI KHOẢN");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 1000, -1));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 1010, 14));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 1010, 17));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));
        jPanel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbxLuachon.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cbxLuachon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Họ và tên", "Tên tài khoản", "Chức vụ", "Mã số nhân viên", "Giới tính", "Ngày sinh" }));
        jPanel3.add(cbxLuachon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 130, 40));

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        jPanel3.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 300, 40));

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_refresh.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel3.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 40, 40));

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_search.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel3.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 40, 40));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 612, 90));

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_add.png"))); // NOI18N
        btnAdd.setText(" Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, 150, 41));

        btndelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_delete.png"))); // NOI18N
        btndelete.setText(" Xóa");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 100, 150, 41));

        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_update.png"))); // NOI18N
        btnEdit.setText(" Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 160, 150, 41));

        exportExcel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        exportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_xls.png"))); // NOI18N
        exportExcel.setText(" Xuất Excel");
        exportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportExcelActionPerformed(evt);
            }
        });
        jPanel1.add(exportExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 160, 150, 41));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        // Lấy lựa chọn từ combo box và văn bản tìm kiếm
        String luachon = (String) cbxLuachon.getSelectedItem();
        String searchContent = txtSearch.getText();
        // Thực hiện tìm kiếm dựa trên lựa chọn
        ArrayList<TaiKhoan> result = new ArrayList<>();
        switch (luachon) {
            case "Tất cả" -> result = TaiKhoancontroller.getInstance().tkTatCa(searchContent);
            case "Họ và tên" -> result = TaiKhoancontroller.getInstance().tkHoTen(searchContent);
            case "Tên tài khoản" -> result = TaiKhoancontroller.getInstance().tkTenTK(searchContent);
            case "Chức vụ" -> result = TaiKhoancontroller.getInstance().tkChucVu(searchContent);
            case "Mã số nhân viên" -> result = TaiKhoancontroller.getInstance().tkMaNV(searchContent);
            case "Giới tính" -> result = TaiKhoancontroller.getInstance().tkGioiTinh(searchContent);
            case "Ngày sinh" -> result = TaiKhoancontroller.getInstance().tkNgaySinh(searchContent);
        }
        loadDataToTable(result);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        // Tạo form ThemTaiKhoan mới
        ThemTaiKhoan a = new ThemTaiKhoan();
        a.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        // Tạo form ThemDanhGia mới
        if (tblAccount.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài khoản cần xoá !");
        } else {
            // Lấy tài khoản được chọn
            TaiKhoan select = getTaiKhoanSelect();
            // Kiểm tra nếu tài khoản là admin
            if (getTaiKhoanSelect().getChucVu().equals("Admin")) {
                JOptionPane.showMessageDialog(this, "Không thể xóa tài khoản admin !");
            } else {
                int checkVl = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa tài khoản này ?", "Xác nhận xóa tài khoản", JOptionPane.YES_NO_OPTION);
                // Nếu người dùng xác nhận xóa
                if (checkVl == JOptionPane.YES_OPTION) {
                    try {
                        // Xóa tài khoản
                        TaiKhoanDAO.getInstance().delete(select);
                        JOptionPane.showMessageDialog(this, "Xoá thành công tài khoản !");
                        // Tải lại dữ liệu vào bảng
                        loadDataToTable(TaiKhoanDAO.getInstance().selectAll());
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Xoá thất bại !");
                    }
                }
            }
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        // Kiểm tra nếu chưa chọn tài khoản nào
        if (tblAccount.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài khoản cần chỉnh sửa !");
        } else {
            // Kiểm tra nếu tài khoản là admin
            if (getTaiKhoanSelect().getChucVu().equals("Admin")) {
                JOptionPane.showMessageDialog(this, "Không thể sửa tài khoản admin tại đây !", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            } else {
                // Tạo cửa sổ sửa tài khoản
                SuaTaiKhoan u = new SuaTaiKhoan(getTaiKhoanSelect());
                u.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void exportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportExcelActionPerformed
        // TODO add your handling code here:
        try {
            // Hiển thị hộp thoại lưu tệp
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");

                // Tạo workbook mới
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("Account");

                // Tạo dòng tiêu đề
                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tblAccount.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tblAccount.getColumnName(i));
                }

                // Điền dữ liệu vào các ô
                for (int j = 0; j < tblAccount.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < tblAccount.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tblAccount.getValueAt(j, k) != null) {
                            cell.setCellValue(tblAccount.getValueAt(j, k).toString());
                        }
                    }
                }

                // Lưu tệp Excel
                try (FileOutputStream out = new FileOutputStream(saveFile)) {
                    wb.write(out);
                }
                wb.close();

                // Mở tệp Excel
                openFile(saveFile.toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }           
    }//GEN-LAST:event_exportExcelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        // Lấy lựa chọn từ combo box và văn bản tìm kiếm
        String luachon = (String) cbxLuachon.getSelectedItem();
        String searchContent = txtSearch.getText();
        // Thực hiện tìm kiếm dựa trên lựa chọn
        ArrayList<TaiKhoan> result = new ArrayList<>();
        switch (luachon) {
            case "Tất cả" -> result = TaiKhoancontroller.getInstance().tkTatCa(searchContent);
            case "Họ và tên" -> result = TaiKhoancontroller.getInstance().tkHoTen(searchContent);
            case "Tên tài khoản" -> result = TaiKhoancontroller.getInstance().tkTenTK(searchContent);
            case "Chức vụ" -> result = TaiKhoancontroller.getInstance().tkChucVu(searchContent);
            case "Mã số nhân viên" -> result = TaiKhoancontroller.getInstance().tkMaNV(searchContent);
        }
        // Tải kết quả tìm kiếm vào bảng
        loadDataToTable(result);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        // Làm mói lựa chọn, tìm kiếm, bảng
        txtSearch.setText("");
        cbxLuachon.setSelectedIndex(0);
        loadDataToTable(TaiKhoanDAO.getInstance().selectAll());
    }//GEN-LAST:event_btnRefreshActionPerformed
    
    // Phương thức mở một file
    public void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btndelete;
    private javax.swing.JComboBox<String> cbxLuachon;
    private javax.swing.JButton exportExcel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable tblAccount;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

   
}
